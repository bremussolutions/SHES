// <auto-generated />
using System;
using BSolutions.SHES.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BSolutions.SHES.Data.Migrations
{
    [DbContext(typeof(ShesDbContext))]
    partial class ShesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientPhone")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientSurname")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConstructionCity")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConstructionPostalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConstructionStreet")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Projects", (string)null);
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.ProjectItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ProjectItems", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProjectItem");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.Building", b =>
                {
                    b.HasBaseType("BSolutions.SHES.Models.Entities.ProjectItem");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("TEXT");

                    b.HasIndex("ProjectId");

                    b.HasDiscriminator().HasValue("Building");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.BuildingPart", b =>
                {
                    b.HasBaseType("BSolutions.SHES.Models.Entities.ProjectItem");

                    b.HasDiscriminator().HasValue("BuildingPart");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.Cabinet", b =>
                {
                    b.HasBaseType("BSolutions.SHES.Models.Entities.ProjectItem");

                    b.HasDiscriminator().HasValue("Cabinet");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.Corridor", b =>
                {
                    b.HasBaseType("BSolutions.SHES.Models.Entities.ProjectItem");

                    b.HasDiscriminator().HasValue("Corridor");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.Device", b =>
                {
                    b.HasBaseType("BSolutions.SHES.Models.Entities.ProjectItem");

                    b.HasDiscriminator().HasValue("Device");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.Floor", b =>
                {
                    b.HasBaseType("BSolutions.SHES.Models.Entities.ProjectItem");

                    b.HasDiscriminator().HasValue("Floor");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.Room", b =>
                {
                    b.HasBaseType("BSolutions.SHES.Models.Entities.ProjectItem");

                    b.HasDiscriminator().HasValue("Room");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.Stair", b =>
                {
                    b.HasBaseType("BSolutions.SHES.Models.Entities.ProjectItem");

                    b.HasDiscriminator().HasValue("Stair");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.ProjectItem", b =>
                {
                    b.HasOne("BSolutions.SHES.Models.Entities.ProjectItem", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.Building", b =>
                {
                    b.HasOne("BSolutions.SHES.Models.Entities.Project", "Project")
                        .WithMany("Buildings")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.Project", b =>
                {
                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("BSolutions.SHES.Models.Entities.ProjectItem", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
